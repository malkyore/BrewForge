@{
    ViewBag.Title = "Craftly.Beer";
}
@using NonFactors.Mvc.Grid;
@using Beernet_Lib.Models;
@using Microsoft.AspNetCore.Http;
@using Beernet_Lib;
@using Brewforge.Models;


    <div class="editorBody">
        <div id="header">
            @model EditorViewModel
            <br />
        </div>
        <div id="toolbar" class="btn-group">
        </div>
        <nav class="menu" tabindex="0">
            <div class="smartphone-menu-trigger"></div>
            <header class="avatar">
                <h2>@Model.currentRecipe.name</h2>
                <h4>@Model.style.name</h4>
                <div>
                    @Model.currentRecipe.description
                </div>
            </header>
            <ul>
                <li id="recipeListItem" tabindex="0" class="icon-dashboard"><span>Recipe</span></li>
                <li id="mashEditorListItem" tabindex="0" class="icon-customers"><span>Mash Editor</span></li>
                <li id="brewLogListItem" tabindex="0" class="icon-users"><span>Brew Logs</span></li>
                <li id="recipeParametersListItem" tabindex="0" class="icon-settings"><span>Recipe Parameters</span></li>
            </ul>
        </nav>
        <div class="recipe-Editor-body-content">
            <div class="module grid" id="recipeInfo" style="height: auto; width:auto; min-height:250px; min-width:600px;">
                <h3>Recipe Info</h3>
                <div class="col-1-4">
                    @using (Html.BeginForm("editRecipe", "Recipe", FormMethod.Get, new { id = "recipeInfoModel", returnModel = Model }))
                    {
                        <div class="editorListItem infogrid">
                            <div class="col-1-4 editorLabel">
                                <label>Name: </label>
                            </div>
                            <div class="col-3-4">
                                @Html.TextBoxFor(m => Model.currentRecipe.name, new { style = "width:100%" })
                            </div>
                        </div>
                        <div class="editorListItem infogrid">
                            <div class="col-1-4 editorLabel">
                                <label>
                                    Style:
                                </label>
                            </div>
                            <div style="display:none">
                                @Html.TextBoxFor(m => Model.selectedStyle, new { id = "selectedstyleIndex" })
                            </div>
                            <div class="col-3-4">
                                <select id="StyleSelector" class="ingredientSelector" style="width:100%;">
                                    @foreach (style s in Model.styleOptions)
                                    {
                                        <option value="@s.idString">@s.name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="editorListItem infogrid">
                            <div class="col-1-4 editorLabel">
                                <label>
                                    Description:
                                </label>
                            </div>
                            <div class="col-3-4">
                                @Html.TextAreaFor(m => Model.currentRecipe.description, new { style = "width:100%;height: auto;", rows = "3" })
                            </div>
                        </div>
                        <input type="submit" value="Save" />
                    }
                </div>
                <div class="col-3-4 statsWidgetSection">
                    <div id="ibuStatWidget" class="statWidget">
                        <div class="statTop">
                            IBU
                        </div>
                        <div class="statBottom">
                            <div id="ibuLabel" class="statLabelText">
                                @Math.Round(Model.currentRecipe.recipeStats.ibu, 2)
                            </div>
                            <div class="grid">
                                <div class="col-1-2" style="font-size:10px; text-align:left;">
                                    <div>MIN</div>
                                    <div class="statLabelText">@Model.style.minIBU</div>
                                </div>
                                <div class="col-1-2" style="font-size:10px; text-align:right;">
                                    <div>MAX</div>
                                    <div class="statLabelText">@Model.style.maxIBU</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="abvStatWidget" class="statWidget">
                        <div class="statTop">
                            ABV
                        </div>
                        <div class="statBottom">
                            <div id="abvLabel" class="statLabelText">
                                @Math.Round(Model.currentRecipe.recipeStats.abv, 2)
                            </div>
                            <div class="grid">
                                <div class="col-1-2" style="font-size:10px; text-align:left;">
                                    <div>MIN</div>
                                    <div class="statLabelText">@Model.style.minABV</div>
                                </div>
                                <div class="col-1-2" style="font-size:10px; text-align:right;">
                                    <div>MAX</div>
                                    <div class="statLabelText">@Model.style.maxABV</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="fgStatWidget" class="statWidget">
                        <div class="statTop">
                            FG
                        </div>
                        <div class="statBottom">
                            <div id="fgLabel" class="statLabelText">
                                @Math.Round(Model.currentRecipe.recipeStats.fg, 2)
                            </div>
                            <div class="grid">
                                <div class="col-1-2" style="font-size:10px; text-align:left;">
                                    <div>MIN</div>
                                    <div class="statLabelText">@Model.style.minFG</div>
                                </div>
                                <div class="col-1-2" style="font-size:10px; text-align:right;">
                                    <div>MAX</div>
                                    <div class="statLabelText">@Model.style.maxFG</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="ogStatWidget" class="statWidget">
                        <div class="statTop">
                            OG
                        </div>
                        <div class="statBottom">
                            <div id="ogLabel" class="statLabelText">
                                @Math.Round(Model.currentRecipe.recipeStats.og, 2)
                            </div>
                            <div class="grid">
                                <div class="col-1-2" style="font-size:10px; text-align:left;">
                                    <div>MIN</div>
                                    <div class="statLabelText">@Model.style.minOG</div>
                                </div>
                                <div class="col-1-2" style="font-size:10px; text-align:right;">
                                    <div>MAX</div>
                                    <div class="statLabelText">@Model.style.maxOG</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="srmStatWidget" class="statWidget">
                        <div class="statTop">
                            SRM
                        </div>
                        <div class="statBottom">
                            <div id="srmLabel" class="statLabelText">
                                @Math.Round(Model.currentRecipe.recipeStats.srm, 2)
                            </div>
                            <div class="grid">
                                <div class="col-1-2" style="font-size:10px; text-align:left;">
                                    <div>MIN</div>
                                    <div class="statLabelText">@Model.style.minColor</div>
                                </div>
                                <div class="col-1-2" style="font-size:10px; text-align:right;">
                                    <div>MAX</div>
                                    <div class="statLabelText">@Model.style.maxColor</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--<button id="testbutton" onclick="ajaxThing()"> CLICK THIS</button>-->
            </div>

            <div class="grid" style="height: 86%; width:100%; min-width: 1000px; min-height:700px;">
                <div>
                    <div class="grid">
                        <!--Start Hop Widget-->
                        <div class="col-1-2 grid-pad">
                            <h3 style="color:white">Hops</h3>
                            @Html.Partial("~/Views/Shared/HopGrid.cshtml", new HopEditorViewModel { hopOptions = Model.hopOptions, allHops = Model.currentRecipe.hops, selectedHopAddition = Model.selectedHopAddition });
                        </div><!--End Hop Widget-->

                        <div class="col-1-2 grid-pad">
                            <!--fermentable widget-->
                            <h3 style="color:white">Fermentables</h3>
                            <div class="grid grid-pad widgetItem recipeEditorWidget">
                                <div class="col-1-2">
                                    <div id="fermentableListSelector" class="module selectorWidget">
                                        @{int index = 0;
                                            foreach (fermentableAddition fa in Model.currentRecipe.fermentables)
                                            {
                                                string name = "f" + index;
                                                <div id=@name class="hopListItem grid" onclick="changeSelectedFermentable(this)">
                                                    <div class="col-1-3">
                                                        <div>@fa.fermentable.name</div>
                                                        <div class="ingredientUnit">name</div>
                                                    </div>
                                                    <div class="col-1-3">
                                                        <div>@fa.fermentable.maltster</div>
                                                        <div class="ingredientUnit">maltster</div>
                                                    </div>
                                                    <div class="col-1-3">
                                                        <div>@fa.weight</div>
                                                        <div class="ingredientUnit">lbs</div>
                                                    </div>
                                                </div>
                                                index++;
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-1-2">
                                    <div class="module grid">
                                        <div class="col-1-2">
                                            <button type="button" onclick="addFermentable(this)">Add Fermentable</button>
                                        </div>
                                        <div class="col-1-2">
                                            <button type="button" onclick="deleteFermentable(this)">Delete Fermentable</button>
                                        </div>
                                    </div>
                                    <div class="module editorWidget">
                                        @using (Html.BeginForm("editRecipe", "Recipe", FormMethod.Get, new { returnModel = Model }))
                                        {
                                            <div style="display:none">
                                                @Html.TextBoxFor(m => m.selectedFermentableAddition.fermentableID)
                                                @Html.EditorFor(m => m.selectedFermentableAddition.fermentable)
                                            </div>
                                            <h4 style="padding-top:0;">Edit Fermentable</h4>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Fermentable: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <select id="FermentableSelector" class="ingredientSelector" style="width:100%;">
                                                        @foreach (fermentable f in Model.fermentableOptions)
                                                        {
                                                            <option value="@f.name">@f.name</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>PPG: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <label>@Model.selectedFermentableAddition.fermentable.yield</label>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Type: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <label>@Model.selectedFermentableAddition.fermentable.type</label>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Maltster: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <label>@Model.selectedFermentableAddition.fermentable.maltster</label>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>amount</label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedFermentableAddition.weight, new { id = "tbFermentableAmount", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <input type="submit" value="Save" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div><!--End Fermentable Widget-->
                    </div>
                    <div class="grid">
                        <div class="col-1-2 grid-pad">
                            <!--Yeast Widget-->
                            <h3 style="color:white">Yeasts</h3>
                            @using (Html.BeginForm("editRecipe", "Recipe", FormMethod.Get, new { returnModel = Model }))
                            {
                                <div class="grid grid-pad widgetItem recipeEditorWidget">
                                    <div class="col-1-2">
                                        <div id="yeastListSelector" class="module selectorWidget">
                                            @{int index2 = 0;
                                                foreach (yeastAddition y in Model.currentRecipe.yeasts)
                                                {
                                                    string name = "y" + index2;
                                                    <div id=@name class="hopListItem grid" onclick="changeSelectedYeast(this)">
                                                        <div class="col-1-3">
                                                            <div>@y.yeast.name</div>
                                                            <div class="ingredientUnit">name</div>
                                                        </div>
                                                        <div class="col-1-3">
                                                            <div>@y.yeast.lab</div>
                                                            <div class="ingredientUnit">lab</div>
                                                        </div>
                                                        <div class="col-1-3">
                                                            <div>@y.yeast.attenuation</div>
                                                            <div class="ingredientUnit">attenuation</div>
                                                        </div>
                                                    </div>
                                                    index2++;
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="col-1-2">
                                        <div class="module grid">
                                            <div class="col-1-2">
                                                <button type="button" onclick="addYeast(this)">Add Yeast</button>
                                            </div>
                                            <div class="col-1-2">
                                                <button type="button" onclick="deleteYeast(this)">Delete Yeast</button>
                                            </div>
                                        </div>
                                        <div class="module editorWidget">
                                            <div style="display:none">
                                                @Html.TextBoxFor(m => m.selectedYeastAddition.yeast.idString);
                                            </div>
                                            <h4 style="padding-top:0;">Edit Yeast</h4>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Yeast: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <select id="YeastSelector" class="ingredientSelector" style="width:100%;">
                                                        @{int i = 0;
                                                            @foreach (yeast y in Model.yeastOptions)
                                                            {
                                                                <option value="@y.name">@y.name</option>
                                                                i++;
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Lab: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <label>@Model.selectedYeastAddition.yeast.lab</label>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Attenuation:</label>
                                                </div>
                                                <div class="col-3-4">
                                                    <label>@Model.selectedYeastAddition.yeast.attenuation</label>
                                                </div>
                                            </div>
                                            <input type="submit" value="Save" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div> <!--End Yeast Widget-->
                        <div class="col-1-2 grid-pad">
                            <!--Adjunct widget-->
                            <h3 style="color:white">Adjuncts</h3>
                            <div class="grid grid-pad widgetItem recipeEditorWidget">
                                <div class="col-1-2">
                                    <div id="adjunctListSelector" class="module selectorWidget">
                                        @{ index = 0;
                                            foreach (adjunctAddition aa in Model.currentRecipe.adjuncts)
                                            {
                                                string name = "a" + index;
                                                <div id=@name class="hopListItem grid" onclick="changeSelectedAdjunct(this)">
                                                    <div class="col-1-3">
                                                        <div>@aa.adjunct.name</div>
                                                        <div class="ingredientUnit">name</div>
                                                    </div>
                                                    <div class="col-1-3">
                                                        <div>@aa.amount</div>
                                                        <div class="ingredientUnit">@aa.unit</div>
                                                    </div>
                                                    <div class="col-1-3">
                                                        <div>@aa.time</div>
                                                        <div class="ingredientUnit">@aa.timeUnit</div>
                                                    </div>
                                                </div>
                                                index++;
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-1-2">
                                    <div class="module grid">
                                        <div class="col-1-2">
                                            <button type="button" onclick="addAdjunct(this)">Add Adjunct</button>
                                        </div>
                                        <div class="col-1-2">
                                            <button type="button" onclick="deleteAdjunct(this)">Delete Adjunct</button>
                                        </div>
                                    </div>
                                    <div class="module editorWidget">
                                        @using (Html.BeginForm("editRecipe", "Recipe", FormMethod.Get, new { returnModel = Model }))
                                        {
                                            <div style="display:none">

                                                @Html.TextBoxFor(m => m.selectedAdjunctAddition.adjunct.idString);
                                            </div>
                                            <h4 style="padding-top:0;">Edit Adjunct</h4>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Adjunct: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    <select id="AdjunctSelector" class="ingredientSelector" style="width:100%;">
                                                        @foreach (adjunct a in Model.adjunctOptions)
                                                        {
                                                            <option value="@a.name">@a.name</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Amount: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedAdjunctAddition.amount, new { id = "tbAdjunctAmount", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Unit: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedAdjunctAddition.unit, new { id = "tbAdjunctUnit", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Time: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedAdjunctAddition.time, new { id = "tbAdjunctTime", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Time Unit: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedAdjunctAddition.timeUnit, new { id = "tbAdjunctTimeUnit", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <div class="editorListItem infogrid">
                                                <div class="col-1-4 editorLabel">
                                                    <label>Use: </label>
                                                </div>
                                                <div class="col-3-4">
                                                    @Html.TextBoxFor(m => m.selectedAdjunctAddition.type, new { id = "tbAdjunctUse", @class = "widgetControlTextbox" })
                                                </div>
                                            </div>
                                            <input type="submit" value="Save" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div><!--End Yeast Widget-->
                    </div>
                </div>
            </div>
        </div>
    </div>
@section scripts {
    <script type="text/javascript">

        $('#HopTypeSelector').on('select2:select', function (e) {
            $('#HopTypeHidden').val(e.target.value);
        });

        $('#StyleSelector').on('select2:select', function (e) {
           $("#selectedstyleIndex").val(e.target.value);
            $("#recipeInfoModel").submit();
            console.log(e);
        });

            $('#HopSelector').on('select2:select', function (e) {
              //  ajaxThing(e.target.selectedIndex);
                window.location = '/Recipe/editRecipe?updatedHop=' + e.target.selectedIndex;
        });

        $('#FermentableSelector').on('select2:select', function (e) {
            window.location = '/Recipe/editRecipe?updatedFermentable=' + e.target.selectedIndex;
            });

            $('#YeastSelector').on('select2:select', function (e) {
                window.location = '/Recipe/editRecipe?updatedYeast=' + e.target.selectedIndex;
            });

            $('#AdjunctSelector').on('select2:select', function (e) {
                window.location = '/Recipe/editRecipe?updatedAdjunct=' + e.target.selectedIndex;
        });

        $("#selectedstyleIndex").change(function () {
            console.log("AJSAJSJAS");
        });


        function changeSelectedHopType(el) {

        }

        function changeSelectedHop(el) {
            window.location = '/Recipe/editRecipe?selectedHop='+el.id.replace("h","");
            console.log(el.id);
        }

            function changeSelectedFermentable(el) {
                window.location = '/Recipe/editRecipe?selectedFermentable=' + el.id.replace("f", "");
                console.log(el.id);
            }
            function changeSelectedYeast(el) {
                window.location = '/Recipe/editRecipe?selectedYeast=' + el.id.replace("y", "");
                console.log(el.id);
            }
            function changeSelectedAdjunct(el) {
                window.location = '/Recipe/editRecipe?selectedAdjunct=' + el.id.replace("a", "");
                console.log(el.id);
            }

        function setSelectedCSS() {
            //set hop selection
            $("#h" +@Model.selectedHopAdditionIndex).removeClass("hopListItem");
            $("#h" +@Model.selectedHopAdditionIndex).addClass("hopListItemSelected");

            //set fermentable selection
            $("#f" +@Model.selectedFermentableAdditionIndex).removeClass("hopListItem");
            $("#f" +@Model.selectedFermentableAdditionIndex).addClass("hopListItemSelected");

            //set yeast selection
            $("#y" +@Model.selectedYeastAdditionIndex).removeClass("hopListItem");
            $("#y" +@Model.selectedYeastAdditionIndex).addClass("hopListItemSelected");

            //set adjunct selection
            $("#a" +@Model.selectedAdjunctAdditionIndex).removeClass("hopListItem");
            $("#a" +@Model.selectedAdjunctAdditionIndex).addClass("hopListItemSelected");
        }

        //save hop scroll position
        $("#hopListSelector").scroll(function () {
            localStorage['page'] = document.URL;
            localStorage['hopScrollTop'] = $("#hopListSelector").scrollTop();
        });

            //save fermentable scroll position
            $("#fermentableListSelector").scroll(function () {
                localStorage['page'] = document.URL;
                localStorage['fermentableScrollTop'] = $("#fermentableListSelector").scrollTop();
            });

            //save yeast scroll position
            $("#yeastListSelector").scroll(function () {
                localStorage['page'] = document.URL;
                localStorage['yeastScrollTop'] = $("#yeastListSelector").scrollTop();
            });

            //save yeast scroll position
            $("#adjunctListSelector").scroll(function () {
                localStorage['page'] = document.URL;
                localStorage['adjunctScrollTop'] = $("#adjunctListSelector").scrollTop();
            });

        
        //add hop
        function addHop(el) {
            window.location = '/Recipe/editRecipe?selectedHop=' + -2;
        }
         //delete hop
        function deleteHop(el) {
            window.location = '/Recipe/editRecipe?selectedHop=' + -3;
        }

        //add fermentable
        function addFermentable(el) {
            window.location = '/Recipe/editRecipe?selectedFermentable=' + -2;
        }
        //delete fermentable
        function deleteFermentable(el) {
            window.location = '/Recipe/editRecipe?selectedFermentable=' + -3;
        }

            //add yeast
            function addYeast(el) {
                window.location = '/Recipe/editRecipe?selectedYeast=' + -2;
            }
            //delete yeast
            function deleteYeast(el) {
                window.location = '/Recipe/editRecipe?selectedYeast=' + -3;
            }

            //add adjunct
            function addAdjunct(el) {
                window.location = '/Recipe/editRecipe?selectedAdjunct=' + -2;
            }
            //delete adjunct
            function deleteAdjunct(el) {
                window.location = '/Recipe/editRecipe?selectedAdjunct=' + -3;
            }

            function setDropDowns() {
            $('#HopTypeSelector').val('@Model.selectedHopAddition.type');
            $('#HopTypeSelector').trigger('change');

            $('#HopSelector').val('@Model.selectedHopAddition.hop.name');
            $('#HopSelector').trigger('change');

            $('#FermentableSelector').val('@Model.selectedFermentableAddition.fermentable.name');
            $('#FermentableSelector').trigger('change');

            $('#YeastSelector').val('@Model.selectedYeastAddition.yeast.name');
            $('#YeastSelector').trigger('change');

            $('#AdjunctSelector').val('@Model.selectedAdjunctAddition.adjunct.name');
                $('#AdjunctSelector').trigger('change');

                $('#StyleSelector').val('@Model.selectedStyle');
                $('#StyleSelector').trigger('change');
        }


        $(document).ready(function () {
            $('.ingredientSelector').select2();
            setDropDowns();
            setSelectedCSS();
            updateLabelColors();
            $("#recipeListItem").addClass("currentMenuSelection");
            

            //Set Scroll Positions
            if (@Model.selectedHopAdditionIndex == 0) {
                localStorage['hopScrollTop'] = 0;
            } else {
                $("#hopListSelector").scrollTop(localStorage['hopScrollTop']);
            }
            if (@Model.selectedFermentableAdditionIndex == 0) {
                localStorage['fermentableScrollTop'] = 0;
            }
            else {
                $("#fermentableListSelector").scrollTop(localStorage['fermentableScrollTop']);
            }
            if (@Model.selectedYeastAdditionIndex == 0) {
                localStorage['yeastScrollTop'] = 0;

            }
            else {
                $("#yeastListSelector").scrollTop(localStorage['yeastScrollTop']);
            }

            if (@Model.selectedAdjunctAdditionIndex == 0) {
                localStorage['adjunctScrollTop'] = 0;

            }
            else {
                $("#adjunctListSelector").scrollTop(localStorage['adjunctScrollTop']);
            }
            disableControlsForEmptyItems();

        });
            function disableControlsForEmptyItems() {
                if (@Model.currentRecipe.hops.Count == 0) {
                    $("#HopTypeSelector").prop('disabled', true);
                    $("#tbHopAmount").prop('disabled', true);
                    $("#tbHopTime").prop('disabled', true);
                }


                if (@Model.currentRecipe.fermentables.Count == 0) {
                    $("#tbFermentableAmount").prop('disabled', true);
                    $("#tbFermentableUse").prop('disabled', true);

                }

                if (@Model.currentRecipe.adjuncts.Count == 0) {
                    $("#tbAdjunctUse").prop('disabled', true);
                    $("#tbAdjunctTimeUnit").prop('disabled', true);
                    $("#tbAdjunctTime").prop('disabled', true);
                    $("#tbAdjunctUnit").prop('disabled', true);
                    $("#tbAdjunctAmount").prop('disabled', true);
                }
            }

            function ajaxThing(el) {
                var hop = { "name": "Centennial", "aau": "14.1" };
                var hopIndex = el;
                $.ajax({
                    url: '/Home/ajaxthingtest',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(hopIndex)
                }).done(function (result) {
                    console.log(result);
                });
            }

            function resetRecipeAndRefresh(recipe) {
                @Model.currentRecipe = recipe;
                $('#hopListSelector').re
        }

        function updateLabelColors() {
            if (@Model.currentRecipe.recipeStats.ibu < @Model.style.minIBU || @Model.currentRecipe.recipeStats.ibu > @Model.style.maxIBU) {
                $("#ibuLabel").addClass("statLabelTextBad");
                $("#ibuLabel").removeClass("statLabelText");
                $("#ibuStatWidget").addClass("statwidgetBad");
                //$("#ibuStatWidget").removeClass("statLabelText");
            }
            if (@Model.currentRecipe.recipeStats.abv < @Model.style.minABV || @Model.currentRecipe.recipeStats.abv > @Model.style.maxABV) {
                $("#abvLabel").addClass("statLabelTextBad");
                $("#abvLabel").removeClass("statLabelText");
                $("#abvStatWidget").addClass("statwidgetBad");
            }
            if (@Model.currentRecipe.recipeStats.og < @Model.style.minOG || @Model.currentRecipe.recipeStats.og > @Model.style.maxOG) {
                $("#ogLabel").addClass("statLabelTextBad");
                $("#ogLabel").removeClass("statLabelText");
                $("#ogStatWidget").addClass("statwidgetBad");
            }
            if (@Model.currentRecipe.recipeStats.fg < @Model.style.minFG || @Model.currentRecipe.recipeStats.fg > @Model.style.maxFG) {
                $("#fgLabel").addClass("statLabelTextBad");
                $("#fgLabel").removeClass("statLabelText");
                $("#fgStatWidget").addClass("statwidgetBad");
            }
            if (@Model.currentRecipe.recipeStats.srm < @Model.style.minColor || @Model.currentRecipe.recipeStats.srm > @Model.style.maxColor) {
                $("#srmLabel").addClass("statLabelTextBad");
                $("#srmLabel").removeClass("statLabelText");
                $("#srmStatWidget").addClass("statwidgetBad");
            }
        }

    </script>
}
